#!/bin/bash

if [[ ${KPATCH_GCC_DEBUG:-0} -ne 0 ]]; then
	set -o xtrace
fi

# cope with multiply-prefixed invocation
while [[ "$1" =~ /kpatch-cc$ ]]; do
  echo >&2 kpatch-cc: stuttered prefix
  shift
done

TOOLCHAINCMD="$1"
shift

if [[ -z "$KPATCH_GCC_TEMPDIR" ]]; then
	exec "$TOOLCHAINCMD" "$@"
fi

declare -a args=("$@")

if [[ "$TOOLCHAINCMD" =~ ^(.*[-/])?(gcc|clang)$ ]] ; then
	while [ "$#" -gt 0 ]; do
		if [ "$1" = "-o" ]; then
			obj="$2"

			# skip copying the temporary .o files created by
			# recordmcount.pl
			[[ "$obj" = */.tmp_mc_*.o ]] && break;

			[[ "$obj" = */.tmp_*.o ]] && obj="${obj/.tmp_/}"
			relobj=${obj##"$KPATCH_GCC_SRCDIR"/}
			case "$relobj" in
				# fixed exclusion list, can be augmented by KPATCH_CC_EXCLUDE
				*.mod.o|\
				*built-in.o|\
				*built-in.a|\
				vmlinux.o|\
				.tmp_kallsyms1.o|\
				.tmp_kallsyms2.o|\
				arch/x86/boot/*|\
				arch/x86/entry/vdso/*|\
				arch/x86/purgatory/*|\
				arch/x86/realmode/*|\
				arch/x86/tools/*|\
				arch/x86/vdso/*|\
				arch/powerpc/kernel/prom_init.o|\
				arch/powerpc/kernel/vdso64/*|\
				arch/s390/boot/*|\
				arch/s390/purgatory/*|\
				arch/s390/kernel/vdso64/*|\
				arch/arm64/kernel/vdso*/*|\
				drivers/firmware/efi/libstub/*|\
				init/version.o|\
				init/version-timestamp.o|\
				kernel/system_certificates.o|\
				lib/*|\
				usr/*|\
				tools/*|\
				.*.o|\
				*/.lib_exports.o)
					break
					;;
				*.o)
					if [[ "$relobj" == @(${KPATCH_CC_EXCLUDE}) ]]; then
						break
					fi
					mkdir -p "$KPATCH_GCC_TEMPDIR/orig/$(dirname "$relobj")"
					[[ -e "$obj" ]] && cp -f "$obj" "$KPATCH_GCC_TEMPDIR/orig/$relobj"
					echo "$relobj" >> "$KPATCH_GCC_TEMPDIR/changed_objs"
					break
					;;
				*)
					break
					;;
			esac
		fi
		shift
	done
      elif [[ "$TOOLCHAINCMD" =~ ^(.*[-/])?ld(\.(ldd|bfd))?$ ]] ; then
	while [ "$#" -gt 0 ]; do
		if [ "$1" = "-o" ]; then
			obj="$2"
			relobj=${obj//$KPATCH_GCC_SRCDIR\//}
			case "$obj" in
				*.ko)
					mkdir -p "$KPATCH_GCC_TEMPDIR/module/$(dirname "$relobj")"
					cp -f "$obj" "$KPATCH_GCC_TEMPDIR/module/$relobj"
					break
					;;
				.tmp_vmlinux*|vmlinux)
					args+=(--warn-unresolved-symbols)
					break
					;;
				*/.tmp_*.o)
					# .tmp_*.o is used for single file modules.
					# See "cmd_ld_single_m" in scripts/Makefile.build.
					if [[ $KPATCH_CC_HANDLE_LTO -ne 0 ]] ; then
						mkdir -p "$KPATCH_GCC_TEMPDIR/orig/$(dirname "$relobj")"
						cp "${obj/.tmp_/}".thinlto.o* "$KPATCH_GCC_TEMPDIR/orig/$(dirname "$relobj")"
						echo "${obj/.tmp_/}".thinlto.o* >> "$KPATCH_GCC_TEMPDIR/thinlto_objs"
					fi
					break
					;;
				*.o)
					if [[ $KPATCH_CC_HANDLE_LTO -ne 0 ]] ; then
						mkdir -p "$KPATCH_GCC_TEMPDIR/orig/$(dirname "$relobj")"
						cp "$obj".thinlto* "$KPATCH_GCC_TEMPDIR/orig/$(dirname "$relobj")"
						echo "$obj".thinlto.o* >> "$KPATCH_GCC_TEMPDIR/thinlto_objs"
					fi
					break
					;;
				*)
					break
					;;
			esac
		fi
		shift
	done
fi

exec "$TOOLCHAINCMD" "${args[@]}"
